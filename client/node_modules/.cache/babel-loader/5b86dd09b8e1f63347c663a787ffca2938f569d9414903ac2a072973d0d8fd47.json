{"ast":null,"code":"var _jsxFileName = \"/Users/tiagorodrigues/Mestrado_CT/1\\xBAAno/EGS/Payment/client/src/PaymentForm.js\",\n  _s = $RefreshSig$();\nimport { withRouter } from 'react-router-dom';\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport StatusMessages, { useMessages } from './StatusMessages';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PaymentForm = () => {\n  _s();\n  const elements = useElements();\n  const stripe = useStripe();\n  const [messages, addMessage] = useMessages();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n    addMessage('Creating payment intent...');\n\n    //Create payment intent on server\n    const {\n      clientSecret\n    } = await fetch('/v1/payment', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data),\n      paymentMethodType: 'card',\n      currency: 'eur'\n    }).then(r => r.json());\n    addMessage('Payment intent created');\n\n    //Confirm the payment on the client\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Washify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"payment-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"card-element\",\n        children: \"Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardElement, {\n        id: \"card-element\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StatusMessages, {\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(PaymentForm, \"hCcwaOMbjl75VW7Fw9o/RUsyGJU=\", false, function () {\n  return [useElements, useStripe, useMessages];\n});\n_c = PaymentForm;\nexport default _c2 = withRouter(PaymentForm);\n\n/* import {withRouter} from 'react-router-dom';\nimport {CardElement, useElements, useStripe} from '@stripe/react-stripe-js';\n\nconst PaymentForm = () => {\n    const elements = useElements();\n    const stripe = useStripe();\n\n    const handleSubmit = async (e) => {\n\n        e.preventDefault();\n\n        if(!stripe || !elements)\n        {\n            return;\n        }\n\n        // Do something with element...\n\n\n        const cardElement = elements.getElement(CardElement)\n        console.log('card', cardElement)\n        console.log('stripe', stripe)\n    }\n    return(\n        <form onSubmit={hadleSubmit}>\n            <CardElement/>\n            <button>Pay</button>\n        </form>\n    ) \n}\n\nexport default withRouter(PaymentForm); */\nvar _c, _c2;\n$RefreshReg$(_c, \"PaymentForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["withRouter","CardElement","useElements","useStripe","StatusMessages","useMessages","jsxDEV","_jsxDEV","Fragment","_Fragment","PaymentForm","_s","elements","stripe","messages","addMessage","handleSubmit","e","preventDefault","clientSecret","fetch","method","headers","body","JSON","stringify","data","paymentMethodType","currency","then","r","json","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onSubmit","htmlFor","_c","_c2","$RefreshReg$"],"sources":["/Users/tiagorodrigues/Mestrado_CT/1ÂºAno/EGS/Payment/client/src/PaymentForm.js"],"sourcesContent":["import {withRouter} from 'react-router-dom';\nimport {CardElement, useElements, useStripe} from '@stripe/react-stripe-js';\nimport StatusMessages, {useMessages} from './StatusMessages'\n\nconst PaymentForm = () => {\n    const elements = useElements();\n    const stripe = useStripe();\n    const [messages, addMessage] = useMessages () ;\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if(!stripe || !elements){\n            return;\n        }\n\n        addMessage ('Creating payment intent...');\n\n        //Create payment intent on server\n        const {clientSecret} = await fetch('/v1/payment', {\n            method: 'POST',\n            headers: {\n            'Content-Type': 'application/json',\n            },\n            body: JSON. stringify (data),\n            paymentMethodType: 'card',\n            currency: 'eur',\n\n        }).then (r => r.json());\n\n        addMessage ('Payment intent created'); \n\n        //Confirm the payment on the client\n\n    }\n    return(\n        <>\n            <h1>Washify</h1>\n\n            <form id = \"payment-form\" onSubmit={handleSubmit}>\n                <label htmlFor = \"card-element\">Card</label>\n                <CardElement id = \"card-element\"/>\n\n                <button>Pay</button>\n            </form>\n\n            <StatusMessages messages={messages} />\n        </>\n    )\n}\n\nexport default withRouter(PaymentForm);\n\n\n\n/* import {withRouter} from 'react-router-dom';\nimport {CardElement, useElements, useStripe} from '@stripe/react-stripe-js';\n\nconst PaymentForm = () => {\n    const elements = useElements();\n    const stripe = useStripe();\n\n    const handleSubmit = async (e) => {\n\n        e.preventDefault();\n\n        if(!stripe || !elements)\n        {\n            return;\n        }\n\n        // Do something with element...\n\n\n        const cardElement = elements.getElement(CardElement)\n        console.log('card', cardElement)\n        console.log('stripe', stripe)\n    }\n    return(\n        <form onSubmit={hadleSubmit}>\n            <CardElement/>\n            <button>Pay</button>\n        </form>\n    ) \n}\n\nexport default withRouter(PaymentForm); */"],"mappings":";;AAAA,SAAQA,UAAU,QAAO,kBAAkB;AAC3C,SAAQC,WAAW,EAAEC,WAAW,EAAEC,SAAS,QAAO,yBAAyB;AAC3E,OAAOC,cAAc,IAAGC,WAAW,QAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5D,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,MAAM,GAAGV,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACW,QAAQ,EAAEC,UAAU,CAAC,GAAGV,WAAW,CAAE,CAAC;EAG7C,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAG,CAACL,MAAM,IAAI,CAACD,QAAQ,EAAC;MACpB;IACJ;IAEAG,UAAU,CAAE,4BAA4B,CAAC;;IAEzC;IACA,MAAM;MAACI;IAAY,CAAC,GAAG,MAAMC,KAAK,CAAC,aAAa,EAAE;MAC9CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACT,cAAc,EAAE;MAChB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAAEC,SAAS,CAAEC,IAAI,CAAC;MAC5BC,iBAAiB,EAAE,MAAM;MACzBC,QAAQ,EAAE;IAEd,CAAC,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IAEvBhB,UAAU,CAAE,wBAAwB,CAAC;;IAErC;EAEJ,CAAC;EACD,oBACIR,OAAA,CAAAE,SAAA;IAAAuB,QAAA,gBACIzB,OAAA;MAAAyB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEhB7B,OAAA;MAAM8B,EAAE,EAAG,cAAc;MAACC,QAAQ,EAAEtB,YAAa;MAAAgB,QAAA,gBAC7CzB,OAAA;QAAOgC,OAAO,EAAG,cAAc;QAAAP,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC5C7B,OAAA,CAACN,WAAW;QAACoC,EAAE,EAAG;MAAc;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAElC7B,OAAA;QAAAyB,QAAA,EAAQ;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eAEP7B,OAAA,CAACH,cAAc;MAACU,QAAQ,EAAEA;IAAS;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACxC,CAAC;AAEX,CAAC;AAAAzB,EAAA,CA9CKD,WAAW;EAAA,QACIR,WAAW,EACbC,SAAS,EACOE,WAAW;AAAA;AAAAmC,EAAA,GAHxC9B,WAAW;AAgDjB,eAAA+B,GAAA,GAAezC,UAAU,CAACU,WAAW,CAAC;;AAItC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA,IAAA8B,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}